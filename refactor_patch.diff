diff --git a/market_data/polymarket_gamma.py b/market_data/polymarket_gamma.py
index abc1234..def5678 100644
--- a/market_data/polymarket_gamma.py
+++ b/market_data/polymarket_gamma.py
@@ -1,6 +1,8 @@
 # -*- coding: utf-8 -*-
-from typing import Dict, Any, Optional
+from typing import Dict, Any, Optional
+
+# Core pricing helper (robust outcome/quotes parsing; never default to ~1.0)
+from market_data.polymarket_price import derive_yes_price_from_gamma
 
 
 def normalize_gamma_market(market: Dict[str, Any]) -> Optional[Dict[str, Any]]:
@@ -15,31 +17,44 @@ def normalize_gamma_market(market: Dict[str, Any]) -> Optional[Dict[str, Any]]:
     out: Dict[str, Any] = {
         "pm_market_id": market.get("id") or market.get("marketId"),
         "title": market.get("question") or market.get("title"),
-        # prices filled below
+        # prices filled below (via robust core helper)
         "source": "polymarket",
     }
 
-    # Previous path: assume outcomePrices is a list and [0] is YES, [1] is NO,
-    # falling back to a near-1.0 clamp when missing. This caused 0.999 artifacts.
-    ops = market.get("outcomePrices") or []
-    outs = market.get("outcomes") or []
-    yes_price: Optional[float] = None
-    try:
-        if isinstance(ops, list) and len(ops) >= 2:
-            # Naively assume index mapping
-            yes_price = float(ops[0])
-    except Exception:
-        yes_price = None
+    # Core path: derive YES via outcomes→mid(bid,ask)→last, with %→prob normalization
+    yes_price: Optional[float] = derive_yes_price_from_gamma(market)
 
-    if yes_price is None:
-        # DO NOT fabricate near-certainty. Mark missing and continue.
-        out["yes_price"] = None
-        out["no_price"] = None
-        out["price_status"] = "missing"
-    else:
-        out["yes_price"] = yes_price
-        out["no_price"] = 1.0 - yes_price
-        out["price_status"] = "ok"
+    # Never fabricate; surface truthfully
+    out["yes_price"] = yes_price
+    out["no_price"] = (1.0 - yes_price) if yes_price is not None else None
+    out["price_status"] = "ok" if yes_price is not None else "missing"
 
     # ... any remaining normalization (timestamps, ticker, etc.) stays the same
     return out
